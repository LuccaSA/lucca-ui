
.lui.popover-source{
	position: relative;
}
.lui.popover {
	min-width: @min-width;
	position: absolute;
	border: 1px solid @border-color;
	padding: .5em;
	background-color: @bg;
	z-index: 100;
	font-family: inherit; // Bootstrap bleeding...
	.lui_border_radius(@border-radius);

	// This is for the arrow
	&:before {
		position: absolute;
	}

	&.left, &.right {
		top: 50%;
		transform: translateY(-50%);
		&:before {
			top: 50%;
			margin-top: -@arrow-size/2;
		}
	}
	&.left {
		right: 100%;
		margin-right: @arrow-size;
		&:before {
			left: 100%;
			.lui_triangle_maker(right, @bg, @arrow-size);
		}
	}
	&.right {
		left: 100%;
		margin-left: @arrow-size;
		&:before {
			right: 100%;
            .lui_triangle_maker(left, @bg, @arrow-size);
		}
	}

	&.top, &.bottom {
		left: 50%;
		transform: translateX(-50%);
		&:before {
			left: 50%;
			margin-left: -@arrow-size/2;
		}
	}
	&.top {
		bottom: 100%;
		margin-bottom: @arrow-size;
		&:before {
			top: 100%;
            .lui_triangle_maker(down, @bg, @arrow-size);
		}
	}
	&.bottom {
		top: 100%;
		margin-top: @arrow-size;
		&:before {
			bottom: 100%;
            .lui_triangle_maker(up, @bg, @arrow-size);
		}
	}

	.button-bar{
		text-align: right;
	}

	input, .ui-select-container {
		width: 100%;
	}
}

.lui.popover:not(.ng-hide) {
	display: block !important;
}


/**
 * Coloring support
 * --------------------------------------------------------------------------- */

 // Coloring ruleset
 // ====
 @coloring-ruleset: {
	background-color: @color;
    color: @text;
    border: none;
    &.bottom:before {
        border-bottom-color: @color;
    }
    &.top:before {
        border-top-color: @color;
    }
    &.left:before {
        border-left-color: @color;
    }
    &.right:before {
        border-right-color: @color;
    }
 };

// Default coloring
// ====
.lui.popover {
    @color: @bg;
    @text: @color;
    @lightOnDark: false;

    @coloring-ruleset();
}

// Custom coloring support
// ====
.lui.popover {
    .lui_supports_coloring(@coloring-ruleset);
}
