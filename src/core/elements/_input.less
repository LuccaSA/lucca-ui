
/**
 * Input
 * --------------------------------------------------------------------------- */

.lui_input_holder_ruleset {
	position: relative;
	display: inline-block;
	vertical-align: middle;
	.display-flex(true);
}
.lui_base_input_ruleset {
	width: 100%;

	// Basic styling
	// =====
	border-radius: @border-radius;
	border: 1px solid @border-color;
	background: #fff;
	color: @color;

	// Focus styling
	// =====
	&:focus, &:active {
		outline: none;
		border-color: darken(@border-color, 10);
	}

	// Placeholders
	// =====
	.lui_placeholder({
		color: @placeholder-color;
		font-style: @placeholder-style;
	});
}

.lui_text_input_ruleset {
	padding: 0 @h-padding;
	line-height: (1em + 2 * @v-padding);
	display: inline-block;
	.flex();
}

.lui.input,
.lui.field {
	&:extend(.lui_input_holder_ruleset);

	> input, > select, > textarea { &:extend(.lui_base_input_ruleset); &:extend(.lui_input_ruleset); }

	> .addon, > input { &:extend(.lui_text_input_ruleset); }

	> select, > textarea { padding: @v-padding @h-padding; }
}

.lui.input, .lui.field { > input, > textarea { cursor: text; } }

// Fitting size
// =====
.lui.fitting.input { width: 100%; }

// Inputs length (horizontal sizing)
// =====
.lui.input.x-short, .lui.field.x-short > input { min-width: 0; width: 5em !important; }
.lui.input.short, .lui.field.short > input { min-width: 0; width: 8em !important; }
.lui.input.medium, .lui.field.medium > input { min-width: 0; width: 15em !important; }
.lui.input.long, .lui.field.long > input { min-width: 0; width: 20em !important; }
.lui.input.x-long, .lui.field.x-long > input { min-width: 0; width: 25em !important; }

// Icon support
// =====
.lui.input.icon {
	> input { padding-left: 2.5em; }

	.lui.icon {
		position: absolute;
		z-index: 2;
		top: 0; bottom: 0;
		height: 100%;
		left: 0;
		width: 2.5em;
		margin-right: 0.5em;
		&:before {
			position: absolute;
			top: 50%; left: 0; right: 0;
			-ms-transform: translate(0, -50%);
			transform: translate(0, -50%);
		}
	}
	&[class*="left icon"] {
		> input {
			padding-left: 0;
			padding-right: 2.5em;
		}
		.lui.icon {
			left: auto; right: 0;
			margin-right: 0;
			margin-left: 0.5em;
		}
	}
}


// Addons
// =====
.lui.input[class*="with addon"],
.lui.input[class*="with addons"] {
	> .addon {
		position: relative; z-index: 2;
		vertical-align: middle;
		border: 1px solid @border-color;
		padding: 0 @h-padding;
		background: @bg;
	}

	> .lui.addon:not([class*="right addon"]),
	&[class*="with addons"] > .lui.addon:first-child {
		margin-right: -1px;
		border-radius: @border-radius 0 0 @border-radius;
		+ input { border-radius: 0 @border-radius @border-radius 0; }
	}

	> .lui[class*="right addon"],
	&[class*="with addons"] .lui.addon:last-child {
		border-radius: 0 @border-radius @border-radius 0;
		margin-left: -@border-radius;
	}

	&[class*="with addons"] > input {
		border-radius: 0 !important;
	}
}

// Addons support coloring
// =====
@coloring-ruleset: {
	background-color: @coloring-color;
	border-color: @coloring-color;
	color: @coloring-text;
	& when (@coloring-lightOnDark = true) { text-shadow: 0 1px 1px darken(@coloring-color, 15); }
};
.lui.input[class*="with addon"] > .addon,
.lui.input[class*="with addons"] > .addon {
	.lui_supports_coloring(@coloring-ruleset);
}


/**
 * Form & field elements
 * --------------------------------------------------------------------------- */

.lui.form {

	.lui.field { // Automatic inputs styling
		margin: @field-v-margin 0;
		&:not(.inline) {
			.flex-direction(column);

			> label, > input { display: block; }
		}

		> input[type="checkbox"] { width: auto; }
		input[type="checkbox"] + label { margin-left: 0.5em; }

		> label { font-weight: @field-label-font-weight; }
	}
}


/**
 * Sizing support
 * --------------------------------------------------------------------------- */

.lui.input {
	.lui_supports_sizing({
		font-size: @sizeEms;
	});
}


/**
 * Search input
 * --------------------------------------------------------------------------- */

.lui.input.search {
	.lui_make_icon(search);

	> input { padding-left: 2.5em; }

	&.searching {
		.lui_loader();
		&:after {
			margin-left: 0;
			left: 1em;
		}
	}

	&:before, &:after {
		cursor: text;
		display: inline-block;
		position: absolute;
		top: 50%; left: 1em;
		-ms-transform: translate(0, -50%);
		transform: translate(0, -50%);
		.user_select_none();
	}

	i.empty {
		.lui_make_icon(cross);
		font-style: normal;
		cursor: pointer;

		font-size: 0.5rem;
		width: 1rem; height: 1rem;
		text-align: center;
		border-radius: 50%;

		&, &:before {
			position: absolute;
			top: 50%; transform: translateY(-50%);
		}
		right: 1em;
		&:before { right: 0.5em; }

		background: @border-color;
		color: #FFF;
	}
}


/**
 * Checkbox
 * --------------------------------------------------------------------------- */

.lui.input.checkbox {
	display: inline-block;
	vertical-align: middle;
	position: relative;
	height: 1.25em;
	width: 1.25em;
	border: 1px solid @border-color;
	overflow: hidden;

	input, label {
		margin: 0;
	}

	input {
		position: absolute;
		left: 0; top: 0;
		z-index: 4;
		width: 100%;
		height: 100%;
		cursor: pointer;
		opacity: 0;
	}

	label {
		display: block;
		box-sizing: border-box;
		position: relative;
		top: 0; bottom: 0; left: 0; right: 0;
		padding: 0;
		height: 100%; width: 100%;
		min-height: 0; // Bootstrap override

		.lui_make_icon(checkbox, left); // Before is unchecked
		.lui_make_icon(check, right); // After is checked

		&:before, &:after {
			position: absolute;
			top: 50%; left: 50%;
			-ms-transform: translate(-50%, -50%);
			transform: translate(-50%, -50%);
			z-index: 2;
			font-size: 1.25em;
			margin: 0;
		}

		&:before {
			color: #FFF;
		}

		&:after {
			font-size: 0.8em;
			z-index: 3;
			color: @checkbox-color;
			opacity: 0;
			.lui_transition();
		}
	}

	input:checked ~ label {
		&:after {
			opacity: 1;
		}
	}

	&:hover label:after {
		opacity: 0.5;
	}
}


/**
 * Toggle
 * --------------------------------------------------------------------------- */

.lui.input.switch {
	@width: 4.5em;
	@height: 2.25em;

	display: inline-block;
	vertical-align: middle;
	position: relative;
	height: @height;
	width: @width;

	input {
		position: absolute;
		z-index: 3;
		width: 100%;
		height: 100%;
		cursor: pointer;
		opacity: 0;
		margin: 0;
	}

	label {
		display: block;
		width: 100%;
		height: 100%;
		position: relative;
		background: @switch-bg;
		color: @switch-color;
		.lui_transition();
		.lui_make_icon(check, left);
		.lui_make_icon(cross, right);

		&:before, &:after {
			display: block;
			position: absolute;
			top: 0.5em;
			z-index: 1;
		}

		&:before {
			left: 0.5em;
		}

		&:after {
			right: 0.5em;
		}

		span {
			background: #fff;
			display: block;
			position: absolute;
			top: 0;
			bottom: 0;
			left: 0.5em;
			right: 0;
			height: 1.5em;
			width: 1.5em;
			margin: auto 0;
			z-index: 2;
			.lui_transition();

			&:before {
				position: absolute;
				top: 0; bottom: 0; left: 0; right: 0;
				content: '';
				display: block;
				height: 50%;
				width: 0.1em;
				background: @switch-grab-lines-color;
				box-shadow: -0.2em 0 0 0 @switch-grab-lines-color, 0.2em 0 0 0 @switch-grab-lines-color;
				margin: auto;
				.lui_transition();
			}
		}
	}

	input:checked ~ label {
		background: @switch-bg-active;
		color: @switch-color-active;
	}

	input:checked ~ label span {
		left: 2.5em;
	}
}


/**
 * Timespan
 * --------------------------------------------------------------------------- */

luid-timespan {
	&:extend(.lui_input_holder_ruleset);

	> input {
		&:extend(.lui_base_input_ruleset);
		&:extend(.lui_text_input_ruleset);
		width: @timespan-width;
	}
}


/**
 * Momentpicker
 * --------------------------------------------------------------------------- */

luid-moment {
	max-width: 5.25em;

	&:extend(.lui_input_holder_ruleset);

	> .luid-moment {
		&:extend(.lui_base_input_ruleset);
		&:extend(.lui_text_input_ruleset);
		padding: 0;
	}

	&:active, &:focus {
		box-shadow: none;
	}

	// styling the inputs inside the directive
	input {
		&:first-child { padding-left: @h-padding; }
		&:last-child { padding-right: @h-padding; }
		line-height: (1em + 2 * @v-padding);
		display: inline-block;

		&:focus, &:active {
			outline: none;
			box-shadow: none;
		}

		background-color: transparent;
		border: none;
		width: 2.2em;
		&:nth-child(1) { text-align: right; }
	}
	// buttons + -
	.mp-button {
		line-height: 1.5em;
		user-select: none;
		font-size: 75%;
		position: absolute;
		z-index: 999;
		cursor: pointer;
		width: 50%;
		text-align: center;
		color: #FFF;
		background-color: @border-color;

		// Positions
		&.top { bottom: 100%; }
		&.bottom { top: 100%; }
		&.left { left: 0; }
		&.right { right: 0; }
	}

	&.ng-invalid {
		.lui.invalid.input !important;
		border-color: @invalid-color !important;
		.mp-button { background-color: @invalid-color !important; }
	}
}



/**
 * Validation
 * --------------------------------------------------------------------------- */

.lui.invalid.input,
.lui.invalid.field,
.lui.ng-invalid.field {
	color: @invalid-color;
	> input {
		color: @invalid-color;
		border-color: @invalid-color;
		.lui_placeholder({ color: lighten(@invalid-color, 15); });
	}
}
