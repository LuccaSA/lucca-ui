/**
 * Floats and clear
 * --------------------------------------------------------------------------- */
.pulled-left, [class*="left pulled"] {
	float: left;
}
.pulled-right, [class*="right pulled"] {
	float: right;
}
.clear {
	zoom: 1;
	&:after {
		display: block;
		visibility: hidden;
		height: 0;
		clear: both;
		content: "";
	}
}


/**
 * User select
 * --------------------------------------------------------------------------- */
.user_select_none {
	-ms-user-select: none;
	user-select: none;
}


/**
 * Transition
 * --------------------------------------------------------------------------- */

@lui_defaults-transition_duration: 0.2s;
@lui_defaults-transition_easing: ease-out;

.lui_transition(@prop: all, @time: @lui_defaults-transition_duration, @ease: @lui_defaults-transition_easing) {
	-ms-transition: @prop @time @ease;
	transition: @prop @time @ease;
}
.lui_transition_properties(...) {
	@props: ~`"@{arguments}".replace(/[\[\]]/g, '')`;
	transition-property: @props;
	.lui_transition_duration();
	.lui_transition_easing();
}
.lui_transition_duration(@duration: @lui_defaults-transition_duration) {
	transition-duration: @duration;
}
.lui_transition_easing(@easing: @lui_defaults-transition_easing) {
	transition-easing: @easing;
}


/**
 * TRIANGLES
 * string @direction Can be 'up', 'down', 'left' or 'right'
 * string @color Color of the triangle
 * string @size Size of the triangle
 * --------------------------------------------------------------------------- */
// Basis for triangles
// ====
.lui_triangle_base() {
	content: '';
	display: block;
	width: 0;
	height: 0;
	-moz-transform: scale(.9999);
}
.lui_triangle_maker(@direction, @color, @size) when (@direction = up) {
	.lui_triangle_base();
	border-left: (@size/2) solid transparent;
	border-right: (@size/2) solid transparent;
	border-bottom: @size solid @color;
 }
.lui_triangle_maker(@direction, @color, @size) when (@direction = down) {
	.lui_triangle_base();
	border-left: (@size/2) solid transparent;
	border-right: (@size/2) solid transparent;
	border-top: @size solid @color;
}
.lui_triangle_maker(@direction, @color, @size) when (@direction = left) {
	.lui_triangle_base();
	border-top: (@size/2) solid transparent;
	border-bottom: (@size/2) solid transparent;
	border-right: @size solid @color;
}
.lui_triangle_maker(@direction, @color, @size) when (@direction = right) {
	.lui_triangle_base();
	border-top: (@size/2) solid transparent;
	border-bottom: (@size/2) solid transparent;
	border-left: @size solid @color;
}


/**
* Floats
* --------------------------------------------------------------------------- */

.lui.clear {
	zoom:1; /* For IE 6/7 (trigger hasLayout) */

	&:before,
	&:after { content: ""; display: table; }
	&:after { clear:both; }
}


/**
 * Shadows
 * --------------------------------------------------------------------------- */

.lui_no_shadows() {
	box-shadow: none;
}
.lui_drop_shadow(@x-axis, @y-axis, @blur, @spread, @color) {
	box-shadow: @x-axis @y-axis @blur @spread @color;
}
.lui_inner_shadow(@x-axis, @y-axis, @blur, @spread, @color) {
	box-shadow: @x-axis @y-axis @blur @spread @color inset;
}


/**
 * Border radius
 * --------------------------------------------------------------------------- */

.lui_rounded() {
	.lui_border_radius();
}
.lui_border_radius(@topleft: @lui_defaults-border_radius, @topright: @topleft, @bottomright: @topleft, @bottomleft: @topleft) {
	border-radius: @topleft @topright @bottomright @bottomleft;
	background-clip: padding-box;
}


/**
 * PLaceholder
 * --------------------------------------------------------------------------- */

.lui_placeholder(@properties) {
	&::-webkit-input-placeholder,
	&:-moz-placeholder,
	&::-moz-placeholder,
	&:-ms-input-placeholder { @properties(); }
}


/**
 * Transform
 * --------------------------------------------------------------------------- */

.lui_transform(...) {
	-webkit-transform: @arguments;
	-moz-transform: @arguments;
	-o-transform: @arguments;
	-ms-transform: @arguments;
	transform: @arguments;
}
.lui_rotate(@angle) {
	.transform(rotate(@angle));
}
.lui_scale(@ratio) {
	.transform(scale(@ratio));
}
