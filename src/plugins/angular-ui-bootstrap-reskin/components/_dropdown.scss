%lui_nguibs_dropdown {
	position: relative;
	display: inline-block;
	overflow: visible !important; // IE fix

	.dropdown-menu {
		box-sizing: border-box;
		visibility: hidden;

		@extend ul#{$prefix}.unstyled;
		position: absolute; z-index: 1000;
		margin-top: -1px;
		top: 100%; left: 0;
		width: 100%;
		min-width: $dropdown-min-width;

		border: 1px solid $border-color;
		border-top: none;
		background-color: $bg;

		box-shadow: $shadow;

		max-height: $dropdown-max-height;
		overflow-x: hidden;

		-webkit-backface-visibility: hidden; /* Chrome, Safari, Opera */
		backface-visibility: hidden;

		@include lui_target_IE9 { box-sizing: content-box; }

		.active a,
		a:hover { background: #EEE; }
		a {
			text-decoration: none;
			display: block;
			padding: 0.5em $h-padding;
			border-top: 1px solid #EEE;

			> span { vertical-align: middle; }
		}
	}

	// Dividers
	.divider { 	@extend %lui_divider_base; margin: 0.5em 0; }
	.dropdown-header {
		padding: 0.5em 1em;
		font-size: 1.1em;
		font-weight: 600;
		&:empty { padding-top: 0; padding-bottom: 0; }
	}

	&.open .dropdown-menu {
		visibility: visible;
		@include lui_is_animated("up slide in");
		@include lui_target_IE9 {
			display: block;
			opacity: 1;
			height: auto;
		}
	}


	// Coloring support
	// ============================================================

	@mixin lui_nguibs_dropdown_coloring($scheme) {
		& {
			.active a,
			a:hover { background: map-get($scheme, color); border-color: map-get($scheme, color); color: map-get($scheme, text); }
		}
	}
	@each $name, $scheme in map-gets($luiTheme, globals, colors) {
		&.#{map-get($scheme, class)} {
			@include lui_nguibs_dropdown_coloring($scheme);
		}
	}
}

#{$prefix}.nguibs-dropdown {
	@extend %lui_nguibs_dropdown;

	&:not(.buttons) > #{$prefix}.button { margin: 0; }

	.dropdown-menu {
	}

	&.open #{$prefix}.button { border-bottom-left-radius: 0; border-bottom-right-radius: 0; }

	a { cursor: pointer; }

	&:not(.aligned) { text-align: left; }
}
