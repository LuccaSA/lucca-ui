
/**
 * Angular UI Tooltip reskin
 * ----------------------------------------------------------------------------- */

.lui.nguibs-tooltip {
	position: absolute;
	z-index: @tooltip-z-index;

	.tooltip-inner {
		&:extend(.lui.raised);
		padding: @tooltip-padding;
		border-radius: @tooltip-border-radius;
	}

	// Animations
	&.fade:not(.in) { .lui_is_animated("up fade out"); }
	&.fade.in { .lui_is_animated("up fade in"); }

	// Arrow
	.tooltip-arrow {
		&:extend(.lui.pointing:after);
		position: absolute;
	}
	&.left .tooltip-arrow, &.right .tooltip-arrow { top: 50%; transform: translateY(-50%); }
	&.left .tooltip-arrow {
		&:extend(.lui[class*="right pointing"]:after);
		left: 100%;
	}
	&.right .tooltip-arrow {
		&:extend(.lui[class*="left pointing"]:after);
		right: 100%;
	}
	&.top .tooltip-arrow, &.bottom .tooltip-arrow { left: 50%; transform: translateX(-50%); }
	&.top .tooltip-arrow {
		&:extend(.lui[class*="bottom pointing"]:after);
		top: 100%;
	}
	&.bottom .tooltip-arrow {
		&:extend(.lui[class*="top pointing"]:after);
		bottom: 100%;
	}
}


/**
 * Coloring support
 * --------------------------------------------------------------------------- */

// Coloring ruleset
// ====
@coloring-ruleset: {
	.tooltip-inner {
		background-color: @coloring-color;
		color: @coloring-text;
		& when (@coloring-lightOnDark = true) {
			text-shadow: 1px 0 1px darken(@coloring-color, 5);
		}
	}
	&.left .tooltip-arrow { border-left-color: @coloring-color; }
	&.top .tooltip-arrow { border-top-color: @coloring-color; }
	&.right .tooltip-arrow { border-right-color: @coloring-color; }
	&.bottom .tooltip-arrow { border-bottom-color: @coloring-color; }
};

// Default coloring
// ====
.lui.nguibs-tooltip {
	font-size: 1rem;
	font-family: inherit;

	@coloring-color: @tooltip-bg;
	@coloring-text: @tooltip-color;
	@coloring-lightOnDark: false;

	@coloring-ruleset();
}

// Custom coloring support
// ====
.lui.nguibs-tooltip {
	.lui_supports_coloring(@coloring-ruleset);
}
