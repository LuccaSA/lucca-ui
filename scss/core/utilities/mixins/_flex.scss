

// Flex display - inline or block
// ===================================

@mixin display-flex($inline: false) {
	@if $inline {
		html:not(.ie9) & {
			display: -ms-inline-flexbox;
			display: inline-flex;
		}
	} @else {
		display: -ms-flexbox;
		display: flex;
	}
}


// Flex direction
// ===================================
@mixin flex-flow($direction, $wrap) {
	-ms-flex-flow: $direction $wrap;
	flex-flow: $direction $wrap;
}

@mixin flex-direction($direction: row, $reverse: false) {
	@if $direction == row and not $reverse {
		-ms-flex-direction: row;
		flex-direction: row;

	} @else if $direction == row and $reverse {
		-ms-flex-direction: row-reverse;
		flex-direction: row-reverse;

	} @else if $direction == column and not $reverse {
		-ms-flex-direction: column;
		flex-direction: column;

	} @else if $direction == column and $reverse {
		-ms-flex-direction: column-reverse;
		flex-direction: column-reverse;
	}
}


// Flex wrap - nowrap | wrap | wrap-reverse
// ===================================

@mixin flex-wrap($option) {
	-ms-flex-wrap: $option;
	flex-wrap: $option;
}


// Justify content - flex-start | flex-end | center | space-between | space-around
// ===================================

@mixin flex-justify-content($direction: center) {
	// Internet Explorer
	@if $direction == center { -ms-flex-pack: center; }
	@else if $direction == space-between { -ms-flex-pack: justify; }
	@else if $direction == space-around { -ms-flex-pack: distribute; }
	@else if $direction == flex-start { -ms-flex-pack: start; }
	@else if $direction == flex-end { -ms-flex-pack: end; }
	// Modern browsers
	justify-content: $direction;
}


// Align items - flex-start | flex-end | center | baseline | stretch
// ===================================

@mixin flex-align-items($direction: flex-start) {
	// Internet Explorer
	-ms-flex-align: $direction;
	@if $direction == flex-start { -ms-flex-align: start; }
	@else if $direction == flex-end { -ms-flex-align: end; }

	align-items: $direction;
}


// Align content - flex-start | flex-end | center | space-between | space-around | stretch
// ===================================

@mixin flex-align-content($direction) {
	align-content: $direction;
}


// Flex item order - integer
// ===================================

@mixin flex-order($order) {
	-ms-flex-order: $order;
	order: $order;
}


// Flex - [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
// ===================================

@mixin flex($grow: 0, $shrink: 1, $basis: auto) {
	-ms-flex: $grow $shrink $basis;
	flex: $grow $shrink $basis;
}


// Align self - flex-start | flex-end | center | baseline | stretch
// ===================================

@mixin flex-align-self($direction: flex-start) {
	// Internet Explorer
	-ms-flex-item-align: $direction;
	@if $direction == flex-start { -ms-flex-item-align: start; }
	@else if $direction == flex-end { -ms-flex-item-align: end; }

	align-self: $direction;
}
