#{$prefix}.tablegrid {

	// Common
	// ====
	text-align: map-gets($vars, textAlignment);

	> .header,
	> .body {
		position: relative;
		overflow: hidden;
	}
	table {
		table-layout: fixed;
		width: 100%;
	}

	// Columns
	// ====
	.locked.columns {
		position: absolute;
		left: 0; right: 0;
		top: 0; bottom: 0;
		overflow: hidden;
	}
	.scrollable.columns {
		position: relative;
		z-index: 2;
		border-left: 1px solid luiPalette(light, color);
	}

	// Cells
	// ====
	th, td {
		padding: map-gets($vars, cell, padding);
		box-sizing: border-box;

		border: 1px solid luiPalette(light, color);

		&.sortable {
			cursor: pointer;
			-webkit-touch-callout: none;
			-webkit-user-select: none;
			-khtml-user-select: none;
			-moz-user-select: none;
			-ms-user-select: none;
			user-select: none;

			&.asc {
				@include lui_make_icon("south arrow");
			}
			&.desc {
				@include lui_make_icon("north arrow");
			}
			&:before {
				float: right;
				font-size: 0.6em;
				padding: 0.5em;
				line-height: 1;
				border-radius: luiTheme(adjective, rounded, radius);
				color: map-gets($vars, header, background);
				background-color: map-gets($vars, header, text);
			}
		}

	}
	.scrollable.columns td.locked,
	.scrollable.columns th.locked,
	.locked.columns td:not(.locked),
	.locked.columns th:not(.locked) {
		width: 0px;
		border-color: transparent;
		overflow: hidden;
	}
	.scrollable.columns td.locked,
	.scrollable.columns th.locked {
		white-space: pre;
	}

	// Header
	// ====
	> .header {
		color: map-gets($vars, header, text);
		font-weight: map-gets($vars, header, fontWeight);
		text-align: map-gets($vars, header, textAlignment);
		a {
			color: map-gets($vars, header, text);
			text-decoration: none;
		}

		th {
			vertical-align: bottom;
			border-color: map-gets($vars, header, borderColor);
		}
		tr:not(.filters) th:not([colspan]) {
			padding-top: map-gets($vars, header, cellPaddingTop);
		}

		.scrollable.columns {
			overflow: hidden;
		}
	}
	.header,
	.header .scrollable.columns {
		background-color: map-gets($vars, header, background);
	}


	// Body
	// ====
	> .body {
		.columns {
			border-bottom: 1px solid luiPalette(light, color);
		}
		.scrollable.columns {
			overflow: auto;
		}
	}
	.virtualscroll {
		position: relative;
		> table {
			position: absolute;
			overflow: hidden; // IE fix
		}
	}

	.body,
	.body .scrollable.columns {
		background-color: map-gets($vars, background);
	}


	// Styles
	// ====
	&.zebra {
		> .content > .columns > div > table > tbody > tr:nth-child(2n) {
			background-color: map-gets($vars, rows, zebraColor);
		}
	}

	// Hover color
	tr.hovering {
		background-color: map-gets($vars, rows, hoverColor) !important;
	}
}
