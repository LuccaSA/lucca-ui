@if luiTheme(element, field, momentpicker, enabled) {
	@at-root #{$namespace} {

		@keyframes momentPickerArrowUp {
			0%, 20%, 50%, 80%, 100% {
				transform: translateY(0);
			}
			40% {
				transform: translateY(-0.5em);
			}
			60% {
				transform: translateY(-0.25em);
			}
		}
		@keyframes momentPickerArrowDown {
			0%, 20%, 50%, 80%, 100% {
				transform: translateY(0);
			}
			40% {
				transform: translateY(0.5em);
			}
			60% {
				transform: translateY(0.25em);
			}
		}

		luid-moment {
			display: inline-block;
			max-width:  luiTheme(element, field, momentpicker, max-width);
			overflow: visible !important; // Buttons

			> .separator,
			> .moment.input {
				display: inline-block;
				vertical-align: middle;
			}
			> .moment.input {
				position: relative;
				width: luiTheme(element, field, momentpicker, width);
			}

			input[type="text"] {
				text-align: center;
			}

			// Hide selection when using buttons
			// ====
			&[show-buttons="true"] input[type="text"] {
				&::selection {
					background: #FFF !important;
				}
				&::-moz-selection {
					background: #FFF !important;
				}
			}

			.mp-button {
				position: absolute;
				left: 0;
				right: 0;
				opacity: 0;
				cursor: pointer;
				color: luiPalette(light, color);

				transition: opacity 125ms ease-out;


				&:before {
					font-size: 0.75em;
					animation-duration: 180ms;
				}

				&:hover {
					color: luiPalette(primary, color);
					background: transparentize(luiPalette(primary, color), 0.9);
				}
				&:active {
					background: transparentize(luiPalette(primary, color), 0.8);

					&.top:before { animation-name: momentPickerArrowUp; }
					&.bottom:before { animation-name: momentPickerArrowDown; }
				}

				&.top {
					top: -1em;
					bottom: 0;
				}
				&.bottom {
					top: 100%;
				}
				&.left {
					left: 0;
				}
				&.right {
					right: 0;
				}
			}

			input:focus ~ .mp-button,
			.moment.input:hover .mp-button,
			.mp-button:hover {
				opacity: 1;
			}

			.separator {
				opacity: 0.7;
			}
		}
	}
}
