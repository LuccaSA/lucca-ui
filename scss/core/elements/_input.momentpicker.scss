luid-moment {
	max-width:  result($vars, momentpicker max-width);
	overflow: visible !important; // Buttons

	@extend %lui_input_holder_base;

	> .luid-moment {
		@extend %lui_input_field_base;
		padding: 0 !important;
	}

	&:active, &:focus {
		box-shadow: none;
	}

	// styling the inputs inside the directive
	input {
		box-sizing: border-box;
		&:first-child {
			padding-left: result($vars, padding horizontal);
		}
		&:last-child {
			padding-right: result($vars, padding horizontal);
		}
		line-height: (1em + result($vars, padding vertical) + result($vars, padding vertical));
		display: inline-block;

		&:focus, &:active {
			outline: none;
			box-shadow: none;
		}

		background-color: transparent;
		border: none;
		width: result($vars, momentpicker width);
		&:nth-child(1) { text-align: right; }

		height: 1 + result($vars, padding vertical) + result($vars, padding vertical); // For any version of IE...
	}
	// buttons + -
	.mp-button {
		line-height: 1.5em;
		@extend %lui_user_select_none;
		font-size: 75%;
		position: absolute;
		z-index: 999;
		cursor: pointer;
		width: 50%;
		text-align: center;
		color: #FFF;
		background-color: result($vars, border-color);

		// Positions
		&.top {
			bottom: 100%;
		}
		&.bottom {
			top: 100%;
		}
		&.left {
			left: 0;
		}
		&.right {
			right: 0;
		}
	}
}

// Invalid field
luid-moment.invalid .luid-moment,
luid-moment.ng-invalid .luid-moment {
	@extend %lui_invalid_input_base;
	.mp-button {
		background-color: result($vars, invalid-color) !important;
	}
}

#{$prefix}.inline.field {
	label + luid-moment {
		margin-left: 0.5em;
	}
}
