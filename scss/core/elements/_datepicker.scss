@at-root #{$namespace} {

	@if luiTheme(element, datepicker, enabled) {
		$vars: luiTheme(element, datepicker);
		luid-date-picker-popup {
			> .lui.input {
				width: map-gets($vars, input, width);
			}
		};
		luid-daterange-picker {
			> .lui.tagged.input {
				width: 2 * map-gets($vars, input, width);
			}
		};
		luid-date-picker, luid-date-picker-popup > .popover > .popover-inner > .popover-content{
			display: inline-block;

			> table {
				display: inline;
				margin: .5em;
				border-collapse: collapse;

				> caption {
					padding: map-gets($vars, header, padding, vertical) map-gets($vars, header, padding, horizontal);

					font-size: map-gets($vars, header, font-size);
					font-weight: map-gets($vars, header, font-weight);

					> span {
						display: inline-block;
						vertical-align: middle;
					}

					> button.previous,
					> button.next {
						display: inline-block;
						background: transparent;
						border: none;
						outline: 0; outline: none;

						padding: 0.5em 1em;
						border-radius: 3px;

						font-family: 'lucca-icons';
						font-size: lui_rem(0.8);

						&:hover {
							background-color: luiPalette(light, color, light);
						}
					}
					> button.previous {
						float: left;
						&:before {
							content: "\e053";
						}
					}
					> button.next {
						float: right;
						&:before {
							content: "\e054";
						}					}
				}

				> tbody > tr > td,
				> thead > tr > th {
					width: map-gets($vars, day, size);
					height: map-gets($vars, day, size);
				}

				> thead > tr > th {
					color: map-gets($vars, heads, color);
					font-weight: map-gets($vars, heads, font-weight);
				}

				> tbody > tr > td {
					text-align: center;
					color: map-gets($vars, day, color);
					-moz-user-select: none;
					-ms-user-select: none;
					-webkit-user-select: none;
					user-select: none;
				}

				> tbody > tr > td.disabled {
					border: map-gets($vars, day, disabled, border, width) map-gets($vars, day, disabled, border, style) map-gets($vars, day, disabled, border, color);
					color: map-gets($vars, day, disabled, color);
					background-color: map-gets($vars, day, disabled, background-color);
				}

				> tbody > tr > td.empty {
					opacity: 0;
					pointer-events: none;
					border: map-gets($vars, day, empty, border, width) map-gets($vars, day, empty, border, style) map-gets($vars, day, empty, border, color);
				}

				> tbody > tr > td:not(.empty) {
					cursor: pointer;
					border: map-gets($vars, day, default, border, width) map-gets($vars, day, default, border, style) map-gets($vars, day, default, border, color);

					color: map-gets($vars, day, default, color);
					background-color: map-gets($vars, day, default, background-color);

					&:hover {
						color: map-gets($vars, day, default, hover, color);
						background-color: map-gets($vars, day, default, hover, background-color);
					}

					&.in-between {
						color: map-gets($vars, day, in-between, color);
						background-color: map-gets($vars, day, in-between, background-color);
						border: map-gets($vars, day, in-between, border, width) map-gets($vars, day, in-between, border, style) map-gets($vars, day, in-between, border, color);

						&:hover {
							color: map-gets($vars, day, in-between, hover, color);
							background-color: map-gets($vars, day, in-between, hover, background-color);
						}
					}

					&.selected {
						z-index: 2;
						color: map-gets($vars, day, selected, color);
						background-color: map-gets($vars, day, selected, background-color);
						border: map-gets($vars, day, selected, border, width) map-gets($vars, day, selected, border, style) map-gets($vars, day, selected, border, color);

						&:hover {
							color: map-gets($vars, day, selected, hover, color);
							background-color: map-gets($vars, day, selected, hover, background-color);
						}
					}
					&.disabled {
						opacity: .5;
						pointer-events: none;
					}

				}
			}
		}
	}
}
