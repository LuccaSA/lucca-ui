
.lui.callout {
	display: block;
	box-sizing: border-box;
	position: relative;

	margin: $v-margin $h-margin;
	border: 1px solid $border-color;
	background: $background;
	padding: $v-padding $h-padding;

	// Content paragraphs
	p:first-child {
		margin-top: 0;
	}
	p:last-child {
		margin-bottom: 0;
	}

	// Header
	> .header {
		padding: 0 $h-padding 0.5em $h-padding;
		margin: -$v-padding -$h-padding 0.5em -$h-padding;
	}


	// Footer
	> .footer {
		text-align: right;
		margin: $v-padding -$h-padding -$v-padding -$h-padding;
		padding: $v-padding $h-padding;
		background: #F6F6F6;
	}

	// Hacking side border position
	&:not(.filled) {
		border-left: none;

		&[class*="up callout"] {
			border-top-width: 0;
			border-left: 1px solid $border-color;
		}
		&[class*="down callout"] {
			border-bottom-width: 0;
			border-left: 1px solid $border-color;
		}
		&[class*="right callout"] {
			border-right-width: 0;
			border-left: 1px solid $border-color;
		}
	}

	// Handle border
	&:after {
		visibility: visible !important; // neutralise possible clearfix
		position: absolute;
		z-index: 2;
		display: block;
		content: "";
	}
	// Position - defaults to left
	&:after {
		top: 0; left: 0;
		width: $border-width;
		min-height: 100%;
	}
	&[class*="up callout"]:after {
		top: 0; left: 0;
		width: 100%;
		min-height: $border-width;
	}
	&[class*="right callout"]:after {
		top: 0; left: auto; right: 0;
		width: $border-width;
		min-height: 100%;
	}
	&[class*="left callout"]:after {
		top: 0; left: 0;
		width: $border-width;
		min-height: 100%;
	}
	&[class*="down callout"]:after {
		top: auto; bottom: 0; left: 0;
		width: 100%;
		min-height: $border-width;
	}
}


// Filled style
// =====
.lui.callout.filled {
	&:after {
		display: none;
	}
}


// Coloring support
// ===================================
@mixin lui_callout_coloring($scheme) {
	// Regular style
	&:not(.filled) {
		&:after {
			background: map-get($scheme, color);
		}
	}

	// Filled style
	&.filled {
		background-color: map-get($scheme, color);
		border-color: darken(map-get($scheme, color), 5);
		&, &:before, a, button {
			color: map-get($scheme, text);
		}

		@if map-get($scheme, lod) {
			text-shadow: 0 1px 1px darken(map-get($scheme, color), 15);
		}

		> .footer {
			background-color: darken(map-get($scheme, color), 3);
		}
	}
}

// Default coloring
// =====
.lui.callout {
	// Default coloring scheme
	@include lui_callout_coloring($default-coloring);
	// Coloring support
	@each $name, $scheme in $lui_colors {
		&.#{$name} {
			@include lui_callout_coloring($scheme);
		}
	}
}



// Callouts
// =====
.lui.callouts {
	> .lui.callout {
		margin: 0;

		&:not(.filled):not(:first-child) {
			border-top: none;
		}
	}
}
