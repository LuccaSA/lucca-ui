@icon-font-path: "@{framework-path}/fonts/LuccaIcons";
@icon-font-name: "lucca-icons";

/**
 * ICON FACTORY - DO NOT TOUCH
 */
// Loads the lucca icon font
@font-face {
  font-family: "lucca-icons";
  src:  url("@{icon-font-path}/@{icon-font-name}.eot");
  src:  url("@{icon-font-path}/@{icon-font-name}.eot?#iefix") format("embedded-opentype"),
        url("@{icon-font-path}/@{icon-font-name}.woff") format("woff"),
        url("@{icon-font-path}/@{icon-font-name}.ttf") format("truetype"),
        url("@{icon-font-path}/@{icon-font-name}.svg#lucca-icons") format("svg");
  font-weight: normal;
  font-style: normal;
}

// Mixin
.mixin-icon(@letter, @side: left) when (@side = left) {
  &:before {
    .lucca-icon-base();
  }
  .lucca-icon-left(@letter);
}
.mixin-icon(@letter, @side: left) when (@side = right) {
  &:after {
    .lucca-icon-base();
  }
  .lucca-icon-right(@letter);
}
// Base styles for icons
.lucca-icon-base {
  vertical-align: middle;
  display: inline-block;
  text-decoration: none;
  position: relative;
  top: -0.15em;
  margin: 0.25em;
  font-family: "lucca-icons";
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
// Spawns an icon on the left
.lucca-icon-left(@letter) {
  &:before {
    content: @letter;
  }
}
// Spawns an icon on the right
.lucca-icon-right(@letter) {
  &:after {
    content: @letter;
  }
}
// Spawns an icon on appropriate side
.lucca-make-icon(@letter) {
  &.lucca-icon,
  &.lucca-icon-left {
    .lucca-icon-left(@letter);
  }
  &.lucca-icon-right {
    .lucca-icon-right(@letter);
  }
}

// You can use the attribute 'data-lucca-icon="@name"' (defaults to left icon)
[data-lucca-icon] {
  .lucca-icon-base();
  .lucca-icon-left(attr(data-lucca-icon));
}
// You can use the attribute 'data-lucca-icon-left="@name"' for left icons specifically
[data-lucca-icon-left] {
  .lucca-icon-base();
  .lucca-icon-left(attr(data-lucca-icon));
}
// You can use the attribute 'data-lucca-icon-left="@name"' for left icons specifically
[data-lucca-icon-right] {
  .lucca-icon-base();
  .lucca-icon-right(attr(data-lucca-icon));
}

.lucca-icon,
.lucca-icon-left {
  &:before {
    .lucca-icon-base();
  }
}
.lucca-icon-right {
  &:after {
    .lucca-icon-base();
  }
}

.solo-icon {
  text-align: center;
  &:before {
    margin-right: 0 !important;
  }
  &:after {
    margin-left: 0 !important;
  }
}

/**
 * DEFINE ALL ICONS FROM HERE
 */
// Plus
.lucca-icon-plus {
  .lucca-make-icon("a");
}
// Add User
.lucca-icon-add-user {
  .lucca-make-icon("b");
}
// Analytics
.lucca-icon-analytics {
  .lucca-make-icon("c");
}
// Chevron East
.lucca-icon-chevron-e {
  .lucca-make-icon("d");
}
// Chevron North
.lucca-icon-chevron-n {
  .lucca-make-icon("e");
}
// Chevron South
.lucca-icon-chevron-s {
  .lucca-make-icon("f");
}
// Chevron West
.lucca-icon-chevron-w {
  .lucca-make-icon("g");
}
// Attachment
.lucca-icon-attachment {
  .lucca-make-icon("h");
}
// Blocks
.lucca-icon-blocks {
  .lucca-make-icon("i");
}
// Branch
.lucca-icon-branch {
  .lucca-make-icon("j");
}
// Breaktime
.lucca-icon-breaktime {
  .lucca-make-icon("k");
}
// Check
.lucca-icon-check {
  .lucca-make-icon("l");
}
// Checkbox (unchecked)
.lucca-icon-checkbox,
.lucca-icon-checkbox.unchecked{
  .lucca-make-icon("m");
  cursor: pointer;
  &:before,
  &:after {
    font-size: 1.2em;
    color: #FFF;
    border: 1px solid @default-input-border-color;
    background-color: @default-body-text-color;
    overflow: hidden;
    text-indent: -1px;
    .inner-shadow();
  }
}
// Checkbox (checked)
.lucca-icon-checkbox.checked {
  .lucca-make-icon("n");
}
// Clock
.lucca-icon-clock {
  .lucca-make-icon("o");
}
// Close
.lucca-icon-close {
  .lucca-make-icon("p");
}
// Datepicker
.lucca-icon-datepicker {
  .lucca-make-icon("q");
}
// Download
.lucca-icon-download {
  .lucca-make-icon("r");
}
// Edit
.lucca-icon-edit {
  .lucca-make-icon("s");
}
// Edit Frame
.lucca-icon-edit-frame {
  .lucca-make-icon("t");
}
// Edit Mini
.lucca-icon-edit-mini {
  .lucca-make-icon("u");
  &:before, &:after {
    font-size: 0.5em;
  }
}
// Ellipsis
.lucca-icon-ellipsis {
  .lucca-make-icon("v");
}
// Error
.lucca-icon-error {
  .lucca-make-icon("w");
}
// Files
.lucca-icon-files {
  .lucca-make-icon("x");
}
// Filter
.lucca-icon-filter {
  .lucca-make-icon("y");
}
// Email
.lucca-icon-email {
  .lucca-make-icon("Z");
}
// Pin
.lucca-icon-pin {
  .lucca-make-icon("A");
}
// Help
.lucca-icon-help {
  .lucca-make-icon("B");
}
// List
.lucca-icon-list {
  .lucca-make-icon("D");
}
// Lock
.lucca-icon-lock {
  .lucca-make-icon("E");
}
// Forbidden
.lucca-icon-forbidden {
  .lucca-make-icon("F");
}
// Minimize
.lucca-icon-minimize {
  .lucca-make-icon("G");
}
// Move
.lucca-icon-move {
  .lucca-make-icon("H");
}
// Move (horizontal)
.lucca-icon-move-h {
  .lucca-make-icon("I");
}
// Move (vertical)
.lucca-icon-move-v {
  .lucca-make-icon("J");
}
// Notification
.lucca-icon-notification {
  .lucca-make-icon("K");
}
// Outside
.lucca-icon-outside {
  .lucca-make-icon("L");
}
// Camera
.lucca-icon-camera {
  .lucca-make-icon("M");
}
// Print
.lucca-icon-print {
  .lucca-make-icon("N");
}
// Refresh
.lucca-icon-refresh {
  .lucca-make-icon("O");
}
// Remove user
.lucca-icon-remove-user {
  .lucca-make-icon("P");
}
// Drag
.lucca-icon-drag {
  .lucca-make-icon("Q");
}
// Search
.lucca-icon-search {
  .lucca-make-icon("R");
}
// Send
.lucca-icon-send {
  .lucca-make-icon("S");
}
// Send to User
.lucca-icon-send-to-user {
  .lucca-make-icon("T");
}
// Settings
.lucca-icon-settings {
  .lucca-make-icon("U");
}
// Comment
.lucca-icon-comment {
  .lucca-make-icon("V");
}
// Timer
.lucca-icon-timer {
  .lucca-make-icon("W");
}
// Trash
.lucca-icon-trash {
  .lucca-make-icon("X");
}
// Unlock
.lucca-icon-unlock {
  .lucca-make-icon("Y");
}
// Upload
.lucca-icon-upload {
  .lucca-make-icon("Z");
}
// User
.lucca-icon-user {
  .lucca-make-icon("0");
}
// Warning
.lucca-icon-warning {
  .lucca-make-icon("1");
}
