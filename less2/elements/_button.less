
/**
 * Icon support
 * --------------------------------------------------------------------------- */
.lui.button .lui.icon {
	margin-right: 0.5em;
	&.right {
		margin-left: 0.5em; margin-right: 0;
	}
}
.lui.button.icon:before {
	margin: 0.07em 0;
}


/**
 * Icon addon
 * --------------------------------------------------------------------------- */

.lui.button.has.addon {
	position: relative;
	padding-left: 3.5em;
	.lui.addon {
		position: absolute;
		z-index: 1;
		left: 0; top: 0; right: 0; bottom: 0;
		width: 2.5em;
		&.icon:before {
			position: absolute;
			top: 50%; left: 50%;
			margin-top: -0.5em; margin-left: -0.5em;
		}
		.lui_transition_properties(color, border-color, background, opacity, box-shadow);
	}
}

/**
 * Button
 * --------------------------------------------------------------------------- */

.lui_button_sizing() {
	display: inline-block;
	vertical-align: middle;
	box-sizing: border-box;

	min-height: @min-height;
	min-width: @min-width;
	padding: @v-padding @h-padding;
	margin: @v-margin @h-margin;
}

.lui.button {
	cursor: pointer;
	outline: none;
	border: none;
	text-decoration: none;
	font-style: normal;
	line-height: 1em;
	.user_select_none;

	.lui_button_sizing();

	white-space: nowrap;
	font-weight: normal;
	text-transform: @text-transform;
	text-shadow: @text-shadow;
	text-align: center;

	.lui_border_radius(@border-radius);

	.lui_transition_properties(background, box-shadow);
}


/**
 * Button states
 * --------------------------------------------------------------------------- */

.lui.button:hover {
	.lui_opacity(0.9);
	.lui_drop_shadow(0px, 2px, 2px, 0, rgba(50, 50, 50, 0.25));
}
.lui.button:active, .lui.button.active {
	&, .lui.addon {
		.lui_inner_shadow(0px, 2px, 2px, 0, rgba(50, 50, 50, 0.25));
	}
}
.lui.button.disabled {
	.lui_opacity(0.5);
	cursor: normal;
	pointer-events: none;
}


/**
 * Button sizes
 * --------------------------------------------------------------------------- */
.lui.button.regular,
.lui.buttons.regular {
 	font-size: @regular;
 }
.lui.button.small,
.lui.buttons.small {
	font-size: @small;
}
.lui.button.large,
.lui.buttons.large {
	font-size: @large;
}
.lui.button.x-large,
.lui.buttons.x-large {
	font-size: @x-large;
}

/**
 * Button styles
 * --------------------------------------------------------------------------- */

 // Flat style
 // =====
.lui.button.flat {
	background-color: transparent;
	color: @lui_link-link_color;
	text-decoration: underline;
	border-color: transparent;

	&:hover {
		background-color: rgba(50, 50, 50, .05);
		border-color: rgba(50, 50, 50, .05);
		.lui_no_shadows();
	}

	&:active {
		background-color: rgba(50, 50, 50, 0.1);
		border-color: rgba(50, 50, 50, .1);
		.lui_no_shadows;
	}

	&:before, &:after {
		text-decoration: none;
	}
}

// Fill style
// =====
.lui_button_fill(@bg, @txt) {
	background: @bg;
	color: @txt;
	border-color: @bg;
}

// Inverted
// =====
.lui_button_default_inverted() {
	background: transparent;
	border-color: rgba(255, 255, 255, 0.35);
	color: rgba(255, 255, 255, 0.5);
	&:hover, &:active, &.active {
		color: #FFF;
		border-color: #FFF;
		&.fill {
			color: rgba(0, 0, 0, 0.75);
		}
		.lui_inner_shadow(0, 0, 0, 1px, #FFF);
	}
}

// Wired style
// =====
.lui_button_wired(@color) {
	background: transparent;
	.lui_inner_shadow(0, 0, 0, 1px, @color);
	border-color: @color;
	color: @color;
	.lui.addon {
		.lui_no_shadows();
		border-right-width: 2px;
		border-color: @color;
	}
}


// Fake button style
// Only applies button sizing properties to given object
// =====
.lui.fake-button {
	.lui_button_sizing();
}


/**
 * Button color
 * --------------------------------------------------------------------------- */

// Default coloring scheme
// =====
.lui_button_default_color_scheme() {
	// Default style is white
	background: #FFF;
	border: 1px solid @lui_colors-grey_light;
	color: @lui_link-link_color;

	&:hover, &:active, &.active {
		color: @lui_link-link_color_hover;
	}

	.lui.addon {
		// Default styling
		background-color: lighten(@lui_colors-grey_light, 10);
		border-right: 1px solid @lui_colors-grey_light;
	}
}
.lui.button {
	.lui_button_default_color_scheme();

	&.wired {
		background: transparent;
		&:hover, &:active, &.active {
			.lui_button_wired(@lui_link-link_color_hover);
		}
	}

	&.fill {
		&:hover, &:active, &.active {
			.lui_button_fill(@lui_colors-grey_light, @lui_colors-grey);
		}
	}

	&.inverted {
		.lui_button_default_inverted();
	}
}

// Primary color
// =====
.lui.button.primary {
	.lui_button_fill(@lui_colors-primary, @lui_colors-over_primary);

	.lui.addon {
		background: darken(@lui_colors-primary, 5);
	}

	&.wired {
		.lui_button_default_color_scheme();
		background: transparent;

		&:hover, &:active, &.active {
			.lui_button_wired(@lui_colors-primary);
		}

		.lui.addon {
			background: transparent;
		}
	}

	&.fill {
		.lui_button_default_color_scheme();
		&:hover, &:active, &.active {
			.lui_button_fill(@lui_colors-primary, @lui_colors-over_primary);
		}
	}

	&.inverted {
		&.fill {
			.lui_button_wired(@lui_colors-primary);

			&:hover, &:active, &.active {
				.lui_button_fill(@lui_colors-primary, @lui_colors-over_primary);
			}
		}

		&.wired {
			.lui_button_wired(#FFF);
			&:hover, &:active, &.active {
				.lui_button_wired(@lui_colors-primary);
			}
		}
	}
}

// Secondary color
// =====
.lui.button.secondary {
	.lui_button_fill(@lui_colors-secondary, @lui_colors-over_secondary);

	&.has.addon {
		.lui.addon {
			background: darken(@lui_colors-secondary, 5);
		}
	}

	&.wired {
		.lui_button_default_color_scheme();
		background: transparent;

		&:hover, &:active, &.active {
			.lui_button_wired(@lui_colors-secondary);
		}
	}

	&.fill {
		.lui_button_default_color_scheme();
		&:hover, &:active, &.active {
			.lui_button_fill(@lui_colors-secondary, @lui_colors-over_secondary);
		}
	}

	&.inverted {
		&.fill {
			.lui_button_wired(@lui_colors-secondary);

			&:hover, &:active, &.active {
				.lui_button_fill(@lui_colors-primary, @lui_colors-over_secondary);
			}
		}

		&.wired {
			.lui_button_wired(#FFF);
			&:hover, &:active, &.active {
				.lui_button_wired(@lui_colors-secondary);
			}
		}
	}
}

// Yellow color
// =====
.lui.button.yellow {
	.lui_button_fill(@lui_colors-yellow, @lui_colors-over_yellow);

	&.has.addon {
		.lui.addon {
			background: darken(@lui_colors-yellow, 5);
		}
	}

	&.wired {
		.lui_button_default_color_scheme();
		background: transparent;

		&:hover, &:active, &.active {
			.lui_button_wired(@lui_colors-yellow);
		}
	}

	&.fill {
		.lui_button_default_color_scheme();
		&:hover, &:active, &.active {
			.lui_button_fill(@lui_colors-yellow, @lui_colors-over_yellow);
		}
	}

	&.inverted {
		&.fill {
			.lui_button_wired(@lui_colors-yellow);

			&:hover, &:active, &.active {
				.lui_button_fill(@lui_colors-yellow, @lui_colors-over_yellow);
			}
		}

		&.wired {
			.lui_button_wired(#FFF);
			&:hover, &:active, &.active {
				.lui_button_wired(@lui_colors-yellow);
			}
		}
	}
}

// Grey color
// =====
.lui.button.grey {
	.lui_button_fill(lighten(@lui_colors-grey, 25), darken(@lui_colors-grey, 10));

	&.has.addon {
		.lui.addon {
			background: lighten(@lui_colors-grey, 20);
		}
	}

	&.wired {
		.lui_button_default_color_scheme();
		background: transparent;

		&:hover, &:active, &.active {
			.lui_button_wired(lighten(@lui_colors-grey, 15));
		}
	}

	&.fill {
		.lui_button_default_color_scheme();
		&:hover, &:active, &.active {
			.lui_button_fill(lighten(@lui_colors-grey, 25), darken(@lui_colors-grey, 10));
		}
	}

	&.inverted {
		&.fill {
			.lui_button_wired(lighten(@lui_colors-grey, 25));

			&:hover, &:active, &.active {
				.lui_button_fill(lighten(@lui_colors-grey, 25), darken(@lui_colors-grey, 10));
			}
		}

		&.wired {
			.lui_button_wired(#FFF);
			&:hover, &:active, &.active {
				.lui_button_wired(@lui_colors-grey);
			}
		}
	}
}

// Light color
// =====
.lui.button.light {
	.lui_button_fill(@lui_colors-grey_light, @lui_colors-grey);

	&.has.addon {
		.lui.addon {
			background: darken(@lui_colors-grey_light, 5);
		}
	}

	&.wired {
		.lui_button_default_color_scheme();
		background: transparent;

		&:hover, &:active, &.active {
			.lui_button_wired(@lui_colors-grey_light);
		}
	}

	&.fill {
		.lui_button_default_color_scheme();
		&:hover, &:active, &.active {
			.lui_button_fill(@lui_colors-grey_light, @lui_colors-grey);
		}
	}

	&.inverted {
		&.fill {
			.lui_button_wired(@lui_colors-grey_light);

			&:hover, &:active, &.active {
				.lui_button_fill(@lui_colors-grey_light, @lui_colors-grey);
			}
		}

		&.wired {
			.lui_button_wired(#FFF);
			&:hover, &:active, &.active {
				.lui_button_wired(@lui_colors-grey_light);
			}
		}
	}
}

// Error color
// =====
.lui.button.error {
	.lui_button_fill(@lui_colors-error, @lui_colors-over_error);

	&.has.addon {
		.lui.addon {
			background: darken(@lui_colors-error, 5);
		}
	}

	&.wired {
		.lui_button_default_color_scheme();
		background: transparent;

		&:hover, &:active, &.active {
			.lui_button_wired(@lui_colors-error);
		}
	}

	&.fill {
		.lui_button_default_color_scheme();
		&:hover, &:active, &.active {
			.lui_button_fill(@lui_colors-error, @lui_colors-over_error);
		}
	}

	&.inverted {
		&.fill {
			.lui_button_wired(@lui_colors-error);

			&:hover, &:active, &.active {
				.lui_button_fill(@lui_colors-error, @lui_colors-over_error);
			}
		}

		&.wired {
			.lui_button_wired(#FFF);
			&:hover, &:active, &.active {
				.lui_button_wired(@lui_colors-error);
			}
		}
	}
}

// Warning color
// =====
.lui.button.warning {
	.lui_button_fill(@lui_colors-warning, @lui_colors-over_warning);

	&.has.addon {
		.lui.addon {
			background: darken(@lui_colors-warning, 5);
		}
	}

	&.wired {
		.lui_button_default_color_scheme();
		background: transparent;

		&:hover, &:active, &.active {
			.lui_button_wired(@lui_colors-warning);
		}
	}

	&.fill {
		.lui_button_default_color_scheme();
		&:hover, &:active, &.active {
			.lui_button_fill(@lui_colors-warning, @lui_colors-over_warning);
		}
	}

	&.inverted {
		&.fill {
			.lui_button_wired(@lui_colors-warning);

			&:hover, &:active, &.active {
				.lui_button_fill(@lui_colors-warning, @lui_colors-over_warning);
			}
		}

		&.wired {
			.lui_button_wired(#FFF);
			&:hover, &:active, &.active {
				.lui_button_wired(@lui_colors-warning);
			}
		}
	}
}

// Success color
// =====
.lui.button.success {
	.lui_button_fill(@lui_colors-success, @lui_colors-over_success);

	&.has.addon {
		.lui.addon {
			background: darken(@lui_colors-success, 5);
		}
	}

	&.wired {
		.lui_button_default_color_scheme();
		background: transparent;

		&:hover, &:active, &.active {
			.lui_button_wired(@lui_colors-success);
		}
	}

	&.fill {
		.lui_button_default_color_scheme();
		&:hover, &:active, &.active {
			.lui_button_fill(@lui_colors-success, @lui_colors-over_success);
		}
	}

	&.inverted {
		&.fill {
			.lui_button_wired(@lui_colors-success);

			&:hover, &:active, &.active {
				.lui_button_fill(@lui_colors-success, @lui_colors-over_success);
			}
		}

		&.wired {
			.lui_button_wired(#FFF);
			&:hover, &:active, &.active {
				.lui_button_wired(@lui_colors-success);
			}
		}
	}
}


 /**
  * Button groups
  * --------------------------------------------------------------------------- */

.lui.buttons {
	display: inline-block;
	vertical-align: middle;
	margin: @v-margin 0;

	& + .lui.buttons {
		margin-left: 1em;
	}

	> .lui.button {
		float: left;
		margin-left: -1px; margin-right: 0;
		&.wired:hover {
			position: relative;
			z-index: 2;
		}
		.lui_border_radius(0);
		&:first-child {
			.lui_border_radius(@border-radius, 0, 0, @border-radius);
		}
		&:last-child {
			.lui_border_radius(0, @border-radius, @border-radius, 0);
		}
	}

	// Modern browsers: flex-box model
	display: inline-flex;
}

// Fitted buttons
// =====
.lui.buttons.fit {
	width: 100%;
	display: table;
	table-layout: fixed;

	> .lui.button {
		display: table-cell;
		text-align: center;
		float: none;
	}

	// Modern browsers: flex-box model
	display: flex;

	> .lui.button {
		float: none;
		flex: 1;
	}
}


/**
 * Bootstrap overrides
 * --------------------------------------------------------------------------- */
 .lui.btn-primary {
 	&, &:active, &.active, &:focus, &:hover {
 		background-color: @lui_colors-primary;
 		border-color: @lui_colors-primary;
 	}
 }
 .lui.btn-secondary {
 	&, &:active, &.active, &:focus, &:hover {
 		background-color: @lui_colors-secondary;
 		border-color: @lui_colors-secondary;
 	}
 }


/**
 * Callout - dismiss button
 * --------------------------------------------------------------------------- */
.lui.callout .dismiss {
	.lui.button;
	.lui.button.flat;
	vertical-align: baseline;
}
