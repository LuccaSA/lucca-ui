
/**
 * Button
 * --------------------------------------------------------------------------- */

.lui_button_sizing() {
	display: inline-block;
	vertical-align: middle;
	box-sizing: border-box;

	min-height: @min-height;
	min-width: @min-width;
	padding: @v-padding @h-padding;
	margin: @v-margin @h-margin;
}

.lui.button {
	cursor: pointer;
	outline: none;
	border: none;
	text-decoration: none;
	font-style: normal;
	line-height: 1em;
	.user_select_none;

	.lui_button_sizing();

	white-space: nowrap;
	font-weight: normal;
	text-transform: @text-transform;
	text-shadow: @text-shadow;
	text-align: center;

	.lui_border_radius(@border-radius);

	.lui_transition_properties(background, box-shadow, color);
}


/**
 * Button states
 * --------------------------------------------------------------------------- */

.lui.button:hover {
	.lui_drop_shadow(0px, 1px, 2px, 0, rgba(50, 50, 50, 0.25));
}
.lui.button:active, .lui.button.active {
	.lui_no_shadows();
}
.lui.button.disabled {
	.lui_opacity(0.5);
	cursor: normal;
	pointer-events: none;
}

/**
 * Button sizes
 * --------------------------------------------------------------------------- */
.lui.button.regular,
.lui.buttons.regular {
 	font-size: @regular;
 }
.lui.button.small,
.lui.buttons.small {
	font-size: @small;
}
.lui.button.large,
.lui.buttons.large {
	font-size: @large;
}
.lui.button.x-large,
.lui.buttons.x-large {
	font-size: @x-large;
}


/**
 * Button styles
 * --------------------------------------------------------------------------- */

.lui.button {
	box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.2) inset;

	// Default coloring
	.lui_button_coloring_handler(@default-background, @default-color);
}

.lui.button:not(.wired) {
	&:hover {
		box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.2) inset, 0px 1px 2px 0 rgba(0, 0, 0, 0.2);
	}
	&:active, &.active {
		box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.2) inset;
	}
}


// Filling style
// =====
.lui.button.filling {
	&:not(.inverted) {
		background: #FFF;
	}
}

// Inverted
// =====
.lui.button.inverted {
	background: transparent;
	color: rgba(255, 255, 255, 0.5);
	&:hover, &:active, &.active {
		color: #FFF;

		box-shadow: 0 0 0 2px #FFF;
	}
}

// Wired style
// =====
.lui.button.wired {
	background: transparent;
	&.has.addon {
		> .addon {
			background-color: transparent;
		}
		&:hover > .addon {
			border-width: 2px;
		}
	}
}

// Fake button style
// Only applies button sizing properties to given object
// =====
.lui.fake-button {
	.lui_button_sizing();
}

// Flat style
// =====
.lui.button.flat {
   background-color: transparent;
   color: rgba(50, 50, 50, 0.8);
   text-decoration: underline;
   box-shadow: none;

   &:hover, &:active, &.active {
	   background: rgba(0, 0, 0, 0.1);
	   box-shadow: 0 0 0 1px rgba(50, 50, 50, .1);
   }

   &:hover {
	   background-color: rgba(50, 50, 50, .05);
   }

   &:active {
	   background-color: rgba(50, 50, 50, 0.1);
   }

   &:before, &:after {
	   text-decoration: none;
   }

   &:inverted {
	   color: #FFF;
   }

   &.icon {
	   text-decoration: none;
   }
}


/**
 * Button groups
 * --------------------------------------------------------------------------- */

.lui.buttons {
	display: inline-block;
	vertical-align: middle;
	margin: @v-margin 0;

	& + .buttons {
		margin-left: 1em;
	}

	> .button {
		float: left;
		margin-top: 0; margin-bottom: 0;
		margin-left: -1px; margin-right: 0;
		&.wired:hover {
			position: relative;
			z-index: 2;
		}
		.lui_border_radius(0);
		&:first-child {
			.lui_border_radius(@border-radius, 0, 0, @border-radius);
		}
		&:last-child {
			.lui_border_radius(0, @border-radius, @border-radius, 0);
		}
	}

	// Modern browsers: flex-box model
	.display-flex(true);

	// Alignment
	// ====
	&.aligned.right {
		text-align: right;
	}
	&.aligned.justify {
		text-align: justify;
	}
	&.aligned.left {
		text-align: left;
	}
}


// Fitted buttons
// =====
.lui.buttons.justify {
	width: 100%;
	display: table;
	table-layout: fixed;

	> .button {
		display: table-cell;
		text-align: center;
		float: none;
	}

	// Modern browsers: flex-box model
	.display-flex();

	> .button {
		float: none;
		.flex(1);
	}
}


/**
 * Icon support
 * --------------------------------------------------------------------------- */
.lui.button .lui.icon {
	margin-right: 0.5em;
	&.right {
		margin-left: 0.5em; margin-right: 0;
	}
}


/**
 * Icon addon
 * --------------------------------------------------------------------------- */

.lui.button.has.addon {
	position: relative;
	> .addon {
		position: absolute;
		z-index: 1;
		top: 0; bottom: 0;
		width: 2.5em;
		height: 100%;
		margin: 0;

		background: rgba(0, 0, 0, 0.1);

		&.icon:before {
			position: absolute;
			top: 50%; left: 50%;
			margin-top: -0.5em; margin-left: -0.5em;
		}
		.lui_transition(border);
	}

	&:not(.right) {
		padding-left: 3.5em;
		> .addon {
			left: 0;
			border-right: 1px solid rgba(0, 0, 0, 0.2);
		}
	}

	&.right {
		padding-right: 3.5em;
		> .addon {
			right: 0;
			border-left: 1px solid rgba(0, 0, 0, 0.2);
		}
	}
}


/**
 * Loading support
 * Status support
 * --------------------------------------------------------------------------- */

.lui.button.status {
	position: relative;
}

// Has addon > update the addon icon
// ====
.lui.button.status.has.addon {
	&.loading > .addon {
		.lui_loader();
		position: absolute;
	}

	&.ok > .addon:before {
		content: "l";
	}

	&.failure > .addon:before {
		content: "F";
	}
}

// Else
// ====
.lui.button.status:not(.has):not(.addon) {
	color: transparent;

	&:not(.icon):before, &:after {
		position: absolute;
		top: 50%; left: 50%;
		-ms-transform: translate(-50%, -150%);
		transform: translate(-50%, -150%);
		.lui_transition_properties(transform);
	}

	// loading
	// ====
	&.loading {
		.lui_loader();
	}
	// Status: OK
	// ====
	&.ok {
		.lui_icon_maker(check, right);
	}
	// Status: failure
	// ====
	&.failure {
		.lui_icon_maker(forbidden, right);
	}
	// Transition
	// ====
	&.loading:after, &.loading:not(.icon):before,
	&.ok:after, &.failure:after {
		-ms-transform: translate(-50%, -50%);
		transform: translate(-50%, -50%);
	}

	// Status
	// ====
	&.status.loading, &.status.ok, &.status.failure {
		color: transparent;
	}
	&.status.ok:after, &.status.failure:after {
		margin: 0;
	}
}

// Buttons inside a heading
// =====
h1 .lui.button,
h2 .lui.button,
h3 .lui.button,
h4 .lui.button,
h5 .lui.button,
h6 .lui.button {
	vertical-align: middle;
}


/**
 * Bootstrap overrides
 * --------------------------------------------------------------------------- */
 .lui.btn-primary {
 	&, &:active, &.active, &:focus, &:hover {
 		background-color: @lui_colors-primary;
 		border-color: @lui_colors-primary;
 	}
 }
 .lui.btn-secondary {
 	&, &:active, &.active, &:focus, &:hover {
 		background-color: @lui_colors-secondary;
 		border-color: @lui_colors-secondary;
 	}
 }
