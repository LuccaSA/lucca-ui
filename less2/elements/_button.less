
/**
 * Icon support
 * --------------------------------------------------------------------------- */
.lui.button .lui.icon {
	margin-right: 0.5em;
	&.right {
		margin-left: 0.5em; margin-right: 0;
	}
}
.lui.button.icon:before {
	margin: 0.07em 0;
}


/**
 * Icon addon
 * --------------------------------------------------------------------------- */

.lui.button.has.addon {
	position: relative;
	padding-left: 3.5em;
	.lui.addon {
		position: absolute;
		z-index: 1;
		left: 0; top: 0; right: 0; bottom: 0;
		width: 2.5em;

		background: rgba(0, 0, 0, 0.1);
		border-right: 1px solid rgba(0, 0, 0, 0.2);

		&.icon:before {
			position: absolute;
			top: 50%; left: 50%;
			margin-top: -0.5em; margin-left: -0.5em;
		}
		.lui_transition(border);
	}
}

/**
 * Button
 * --------------------------------------------------------------------------- */

.lui_button_sizing() {
	display: inline-block;
	vertical-align: middle;
	box-sizing: border-box;

	min-height: @min-height;
	min-width: @min-width;
	padding: @v-padding @h-padding;
	margin: @v-margin @h-margin;
}

.lui.button {
	cursor: pointer;
	outline: none;
	border: none;
	text-decoration: none;
	font-style: normal;
	line-height: 1em;
	.user_select_none;

	.lui_button_sizing();

	white-space: nowrap;
	font-weight: normal;
	text-transform: @text-transform;
	text-shadow: @text-shadow;
	text-align: center;

	.lui_border_radius(@border-radius);

	.lui_transition_properties(background, box-shadow, color);
}


/**
 * Button states
 * --------------------------------------------------------------------------- */

.lui.button:hover {
	.lui_drop_shadow(0px, 1px, 2px, 0, rgba(50, 50, 50, 0.25));
}
.lui.button:active, .lui.button.active {
	.lui_no_shadows();
}
.lui.button.disabled {
	.lui_opacity(0.5);
	cursor: normal;
	pointer-events: none;
}

/**
 * Button sizes
 * --------------------------------------------------------------------------- */
.lui.button.regular,
.lui.buttons.regular {
 	font-size: @regular;
 }
.lui.button.small,
.lui.buttons.small {
	font-size: @small;
}
.lui.button.large,
.lui.buttons.large {
	font-size: @large;
}
.lui.button.x-large,
.lui.buttons.x-large {
	font-size: @x-large;
}


/**
 * Button styles
 * --------------------------------------------------------------------------- */

 .lui.button {
 	box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.2) inset;
 }

 .lui.button:not(.wired) {
 	&:hover {
 		box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.2) inset, 0px 1px 2px 0 rgba(0, 0, 0, 0.2);
 	}
 	&:active, &.active {
 		box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.2) inset;
 	}
 }

 // Flat style
 // =====
.lui.button.flat {
	background-color: transparent;
	color: rgba(50, 50, 50, 0.8);
	text-decoration: underline;
	box-shadow: none;

	&:hover, &:active, &.active {
		background: rgba(0, 0, 0, 0.1);
		box-shadow: 0 0 0 1px rgba(50, 50, 50, .1);
	}

	&:hover {
		background-color: rgba(50, 50, 50, .05);
	}

	&:active {
		background-color: rgba(50, 50, 50, 0.1);
	}

	&:before, &:after {
		text-decoration: none;
	}

	&:inverted {
		color: #FFF;
	}
}

// Fill style
// =====
.lui.button.fill {
	&:not(.inverted) {
		background: #FFF;
	}
}

// Inverted
// =====
.lui.button.inverted {
	background: transparent;
	color: rgba(255, 255, 255, 0.5);
	&:hover, &:active, &.active {
		color: #FFF;

		box-shadow: 0 0 0 2px #FFF;
	}
}

// Wired style
// =====
.lui.button.wired {
	background: transparent;
	&.has.addon {
		> .addon {
			background-color: transparent;
		}
		&:hover > .addon {
			border-width: 2px;
		}
	}
}

// Fake button style
// Only applies button sizing properties to given object
// =====
.lui.fake-button {
	.lui_button_sizing();
}


/**
 * Button color
 * --------------------------------------------------------------------------- */

 .lui.button {
 	.lui_button_add_color(#FFF, @lui_colors-grey);
 }

.lui_button_add_color(@color, @txt-over) {
	// Regular style
	// =====
	&:not(.fill):not(.wired):not(.inverted):not(.flat) {
		background: @color;
		color: @txt-over;
		&:hover {
			background: lighten(@color, 3);
		}
		&:active, &.active {
			background: darken(@color, 3);
		}
	}

	// Fill(ed) style
	// =====
	&.fill {
		&:hover {
			background: @color;
			color: @txt-over;
		}
		&:active, &.active {
			background: darken(@color, 5);
		}
	}
	// Wired style
	// Wired + Inverted is not supported
	// =====
	&.wired:not(.inverted) {
		// Regular
		&:hover,
		&:active,
		&.active, {
			box-shadow: 0 0 0 2px @color inset;
			color: @color;

			&.has.addon > .addon {
				border-color: @color;
			}
		}
	}
	// Inverted style
	// ====
	&.inverted {
		box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.5) inset;
		color: #FFF;

		&:hover {
			box-shadow: 0 0 0 2px @color inset;
			color:@color;
		}

		&.fill:hover {
			color: @txt-over;
		}
	}
}

// Default coloring scheme
// =====
.lui_button_default_color_scheme() {
	// Default style is white
	background: #FFF;
	.lui_inner_shadow(0, 0, 0, 1px, @lui_colors-grey_light);

	color: @lui_link-link_color;

	&:hover, &:active, &.active {
		color: @lui_link-link_color_hover;
	}

}

// Primary color
// =====
.lui.button.primary {
	.lui_button_add_color(@lui_colors-primary, @lui_colors-over_primary);
}

// Secondary color
// =====
.lui.button.secondary {
	.lui_button_add_color(@lui_colors-secondary, @lui_colors-over_secondary);
}

// Yellow color
// =====
.lui.button.yellow {
	.lui_button_add_color(@lui_colors-yellow, @lui_colors-over_yellow);
}

// Grey color
// =====
.lui.button.grey {
	.lui_button_add_color(@lui_colors-grey, #FFF);
}

// Light color
// =====
.lui.button.light {
	.lui_button_add_color(@lui_colors-grey_light, @lui_colors-grey);
}

// Error color
// =====
.lui.button.error {
	.lui_button_add_color(@lui_colors-error, @lui_colors-over_error);
}

// Warning color
// =====
.lui.button.warning {
	.lui_button_add_color(@lui_colors-warning, @lui_colors-over_warning);
}

// Success color
// =====
.lui.button.success {
	.lui_button_add_color(@lui_colors-success, @lui_colors-over_success);
}


 /**
  * Button groups
  * --------------------------------------------------------------------------- */

.lui.buttons {
	display: inline-block;
	vertical-align: middle;
	margin: @v-margin 0;

	& + .buttons {
		margin-left: 1em;
	}

	> .button {
		float: left;
		margin-left: -1px; margin-right: 0;
		&.wired:hover {
			position: relative;
			z-index: 2;
		}
		.lui_border_radius(0);
		&:first-child {
			.lui_border_radius(@border-radius, 0, 0, @border-radius);
		}
		&:last-child {
			.lui_border_radius(0, @border-radius, @border-radius, 0);
		}
	}

	// Modern browsers: flex-box model
	display: inline-flex;
}

// Fitted buttons
// =====
.lui.buttons.fit {
	width: 100%;
	display: table;
	table-layout: fixed;

	> .button {
		display: table-cell;
		text-align: center;
		float: none;
	}

	// Modern browsers: flex-box model
	display: flex;

	> .button {
		float: none;
		flex: 1;
	}
}


/**
 * Bootstrap overrides
 * --------------------------------------------------------------------------- */
 .lui.btn-primary {
 	&, &:active, &.active, &:focus, &:hover {
 		background-color: @lui_colors-primary;
 		border-color: @lui_colors-primary;
 	}
 }
 .lui.btn-secondary {
 	&, &:active, &.active, &:focus, &:hover {
 		background-color: @lui_colors-secondary;
 		border-color: @lui_colors-secondary;
 	}
 }


/**
 * Callout - dismiss button
 * --------------------------------------------------------------------------- */
.lui.callout .dismiss {
	.lui.button;
	.lui.button.flat;
	vertical-align: baseline;
}
